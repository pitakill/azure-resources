// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// 2019-09-18 18:26:03.958204026 -0500 CDT m=+0.000175229
package azure_resources

import (
	"context"

	"github.com/Azure/azure-sdk-for-go/profiles/latest/compute/mgmt/compute"
	"github.com/Azure/go-autorest/autorest"
)

type ComputeVirtualMachines struct {
	subscriptionID string
	groupName      string
	resourceName   *string
	authorizer     autorest.Authorizer
}

func (r *ComputeVirtualMachines) GetProperties() ([]byte, error) {
	client := compute.NewVirtualMachinesClient(r.subscriptionID)
	client.Authorizer = r.authorizer

	resource, err := client.Get(context.Background(), r.groupName, *r.resourceName, "")
	if err != nil {
		return []byte{}, err
	}

	return resource.MarshalJSON()
}

type ComputeVirtualMachineExtensions struct {
	subscriptionID string
	groupName      string
	resourceName   *string
	authorizer     autorest.Authorizer
}

func (r *ComputeVirtualMachineExtensions) GetProperties() ([]byte, error) {
	client := compute.NewVirtualMachineExtensionsClient(r.subscriptionID)
	client.Authorizer = r.authorizer

	resource, err := client.Get(context.Background(), r.groupName, *r.resourceName, "", "")
	if err != nil {
		return []byte{}, err
	}

	return resource.MarshalJSON()
}

type ComputeDisks struct {
	subscriptionID string
	groupName      string
	resourceName   *string
	authorizer     autorest.Authorizer
}

func (r *ComputeDisks) GetProperties() ([]byte, error) {
	client := compute.NewDisksClient(r.subscriptionID)
	client.Authorizer = r.authorizer

	resource, err := client.Get(context.Background(), r.groupName, *r.resourceName)
	if err != nil {
		return []byte{}, err
	}

	return resource.MarshalJSON()
}
